@startuml

!define RECTANGLE class
!define ENDRECTANGLE }

top to bottom direction


RECTANGLE VertexBufferManager {
  constructor(vertexFormats, instanceFormats)
  getBuffers()
  getVertexBuffer()
  getInstanceBuffer()
}

RECTANGLE QueueElement {
  device
  pipeline
  renderPassDescriptor
  vertexCount
  instanceCount
  vertexBuffers
  bindGroups
}
RECTANGLE Group {
  type = 'Group'
  draw(...)
}

RECTANGLE VegaJS {
}

RECTANGLE WebGPURenderer {
  initialize(canvas, width, height, origin)
  resize(width, height, origin)
  _reinit()
  _render(scene)
  draw(device, ctx, scene, bounds)
}

RECTANGLE BufferManager {
  device
  bufferName
  resolution
  offset
  createUniformBuffer(data)
  createGeometryBuffer(data)
  createInstanceBuffer(data)
  createVertexBuffer(data)
}

RECTANGLE Mark {
  type
  draw(...)
  initialize()
  createAttributes(items)
}

RECTANGLE Renderer{
  _queue
  colorFormat
  depthFormat
  ---
  startFrame()
  render()
  queue()
  submitQueue()
  ---
  createRenderPipeline()
  createRenderPassDescriptor()
  createUniformBindGroup()
}

VegaJS -- WebGPURenderer : calls

WebGPURenderer --> Mark : draw
WebGPURenderer --> Renderer : startFrame
WebGPURenderer --> Renderer : submitQueue

Renderer --> QueueElement : uses

Mark --> Mark : initialize
Mark --> Renderer : createRenderPassDescriptor
Mark --> Renderer : createRenderPipeline
Mark --> BufferManager : uses
Mark --> VertexBufferManager : uses

Group --> Mark : inherits
Group --> WebGPURenderer : draw


@enduml
